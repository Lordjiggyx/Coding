Used to align componenets beetter
responisve to mobile
easier to Use


lets start 

mostly done in containers 

there is a general container and then 
child elements in this container that
are manipulated using flex

for example 

.container-1{
display :flex;
}
*****Display flex must be put in containers to assign the flex variables

display flex is used to align side by side 

you can use flex on it's own to edit the size of these elements

e.g.

.box{
flex:1;
}

******Arrangement/Order*******

To change the order of objects we can use order
e.g

.box-1{
flex: 1;
order:2
}

.box-2{
flex: 1;
order:3

}

.box-3{
flex: 1;
order:1

}


*****Alignment*****

We can use align to align the height of the elements due to content

using align there's multiple values for align e.g.
align-items
align-content
align-self

Each of these have thier own set of values
e.ge.
flex-start
flex-end
center
strech

e.g.

.container-1
{
display: flex;
align-items: flex-start
align-content:
}

*********Direction/Horizontal/Columns******

You can do this by using flex Direction

can set the flex direction to either Column or row

.container-1{
display :flex;
flex-direction:column;
}


*****Margin/Width********

we can use width

.container-2-box
{
    width: 20%;
}
we can use flex-basis too
.container-2-box
{
    flex-basis: 20%;
}

Margins can be done by using justify-content
justify-content has it's own set of values
e.g

flex-start
flex-end
center
space-between - This one allows the whole page to be taken up if there is empty space
space-around-Does the same thing but adds margins around the elements


To allow flexibility between devices we can use a media query around the container
this makes the size more responisve
 @media(min-width:769px)
        {
            .container-1
            {
            display: flex;

            }
            .container-2
            {
            display: flex;
            justify-content: space-between
            }
        }


***********Wrapping***********************
we can wrap elements using flex-wrap

flex-wrap has it's own values 
the most common being wrap

.container-3
            {
            display: flex;
            flex-wrap: wrap
            }

Much More Practice needed when you try this yourself



---justify---

flex items are distributed using axis

the justify content property is used to distribute space along the axis

it thas a number of variavles e.g, flex-start flex-end center etc


---Changing the order of a flex item---
we can use the property order and use a number 
e.g

order:1 = display element after 
order:-1 = display element before


---distributing flex items of a cross axis---

the cross axis is perpendicular to the main axis

so in a column direction the cross axis is Horizontal

and in a row direction the cross axis is vertical

align items is used to distribute space on the cross axis 

it takes in values such as 

strech - default
flex start
flex end 
center
baseline

items strech to fill the wifth of the container they are in


---Sizing flex items---

The flex-grow property is used to specify the ratio of space an items should flill in the
mina axis . it accepts numbers with 0 as a default

This space is the space of the container - the space required for the remaining flex items

The flex-shrink propert is used to specify the shrink factor of a flex iten . it accepets numbers and the feafult is 1
    

--Mananging widths---

The flex-basis property is used to specify the initial size of a flex item .It defaults to auto and current;y supports CSS units:% px em rem etc

e.g:

flex-basis:50%
flex-basis:3 rem

---Aligning content in edge cases---

The align-self property isused to align individula 
flex items by overriding the align-items value.

This can make an item take up all avaliable height in it's container

The default value is strecth and it accepts flex-start flex-end center baseline

align-items does not control wrapped itens


align-content property is used to align wrapped flex items

--Grouping  multiple flex propertoies into one

flex is a shorthand property used to sewt values for flex-grow flex shrink and flex absis.The default is 0 1 auto

.flex
{
    flex:
    0 - grow
    1 - shrink
    auto - basis
} 

if you see flex with a number and a percentage thats setting the grow and basis values

The lsex flow shorthand is used to set the values for flex-direction and flex wrap
the default is row nowrap

.flex{
    flex-flow:
    row = flex-direction
    nowrap- flex-wrap
}